# Toggles the player's AFK state.
afk {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afk=true
        away=true
        nafk=true
        naway=true
    }
}
# Kicks all currently AFK players.
afkkick {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afkkick=true
        kickafk=true
        nafkkick=true
        nkickafk=true
    }
}
# Invalidates the AFK permission cache.
afkrefresh {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        afkrefresh=true
        nafkrefresh=true
    }
}
# Opens an anvil window so users can repair and rename items.
anvil {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        anvil=true
        nanvil=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows a user to return to their last place before death or warp.
back {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        back=true
        nback=true
        nreturn=true
        return=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Bans a player.
ban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ban=true
        nban=true
    }
}
# Send an "Action Bar" message to players.
basicactionbar {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basicactionbar=true
        nbasicactionbar=true
    }
}
# Send a Subtitle message to players.
basicsubtitle {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basicsubtitle=true
        nbasicsubtitle=true
    }
}
# Send a Title message to players.
basictitle {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        basictitle=true
        nbasictitle=true
    }
}
# Get information about the block you are currently facing.
blockinfo {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        blockinfo=true
        nblockinfo=true
    }
}
# Sets the target block to air.
blockzap {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        blockzap=true
        nblockzap=true
        nzapblock=true
        zapblock=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Broadcasts a message to the entire server.
broadcast {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        bc=true
        bcast=true
        broadcast=true
        nbc=true
        nbcast=true
        nbroadcast=true
    }
}
# Checks the ban status for a player.
checkban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkban=true
        ncheckban=true
    }
}
# Checks if a player is jailed.
checkjail {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkjail=true
        ncheckjail=true
    }
}
# Returns a list of currently jailed players, optionally in the specified jail.
checkjailed {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkjailed=true
        ncheckjailed=true
    }
}
# Checks whether the specified player is muted.
checkmute {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkmute=true
        ncheckmute=true
    }
}
# Returns a list of currently muted players.
checkmuted {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checkmuted=true
        ncheckmuted=true
    }
}
# Allows the user to check a player's notes.
checknotes {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        checknotes=true
        nchecknotes=true
        nnotes=true
        notes=true
    }
}
# Clears a player's inventory.
clear {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ci=true
        clear=true
        clearinv=true
        clearinvent=true
        clearinventory=true
        nci=true
        nclear=true
        nclearinv=true
        nclearinvent=true
        nclearinventory=true
    }
}
# Allows a user to clear another user's current "back" position.
clearback {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearback=true
        nclearback=true
    }
}
# Allows the user to clear a player's notes.
clearnotes {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearnotes=true
        nclearnotes=true
        nremoveallnotes=true
        removeallnotes=true
    }
}
# Returns information about a command
commandinfo {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        commandinfo=true
        ncommandinfo=true
    }
}
# Enables or disables seeing commands that others have run.
commandspy {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        commandspy=true
        ncommandspy=true
    }
}
# Deletes your current nickname
delnick {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletenick=true
        delnick=true
        delnickname=true
        ndeletenick=true
        ndelnick=true
        ndelnickname=true
    }
}
# Allows the user to enchant items.
enchant {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        enchant=true
        enchantment=true
        nenchant=true
        nenchantment=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Opens an enchanting table window so users can enchant items.
enchantingtable {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        enchantingtable=true
        enchanttable=true
        etable=true
        nenchantingtable=true
        nenchanttable=true
        netable=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to inspect their (or another player's) ender chest.
enderchest {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ec=true
        echest=true
        enderchest=true
        nec=true
        nechest=true
        nenderchest=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Get information about the entity you are currently facing.
entityinfo {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        entityinfo=true
        nentityinfo=true
    }
}
# Displays the specified player's current experience.
exp {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        exp=true
        experience=true
        nexp=true
        nexperience=true
        nxp=true
        xp=true
    }
}
# Gives experience to the specified player.
"exp.give" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the specified player's experience.
"exp.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes experience from the specified player.
"exp.take" {
    # Sets whether a command is enabled.
    enabled=true
}
# Extinguishes a player that is currently burning
extinguish {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ext=true
        extinguish=true
        next=true
        nextinguish=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Set specified player's hunger to full.
feed {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        eat=true
        feed=true
        neat=true
        nfeed=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# If set, warp to the new player spawn point.
firstspawn {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        firstspawn=true
        nfirstspawn=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Set specified player's fly mode.
fly {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        fly=true
        nfly=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Freezes a player in place.
freezeplayer {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        freeze=true
        freezeplayer=true
        nfreeze=true
        nfreezeplayer=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets a player's game mode.
gamemode {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gamemode=true
        gm=true
        ngamemode=true
        ngm=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles your game mode between survival and creative.
"gamemode.gmt" {
    # Sets whether a command is enabled.
    enabled=true
}
# Gets all users last seen on the specified IP.
getfromip {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        getfromip=true
        ngetfromip=true
    }
}
# Gets the location of the executing or target player.
getpos {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        coords=true
        getloc=true
        getlocation=true
        getpos=true
        ncoords=true
        ngetloc=true
        ngetlocation=true
        ngetpos=true
        nposition=true
        nwhereami=true
        position=true
        whereami=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Enable or disable a server wide mute. Anyone that has the permission "nucleus.globalmute.voice.auto" will always have voice.
globalmute {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        globalmute=true
        nglobalmute=true
    }
}
# Toggles your game mode to adventure.
gma {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        adventure=true
        gma=true
        nadventure=true
        ngma=true
    }
}
# Toggles your game mode to creative.
gmc {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        creative=true
        gmc=true
        ncreative=true
        ngmc=true
    }
}
# Toggles your game mode to survival.
gms {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gms=true
        ngms=true
        nsurvival=true
        survival=true
    }
}
# Toggles your game mode to spectator.
gmsp {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        gmsp=true
        ngmsp=true
        nspectator=true
        spectator=true
    }
}
# Set specified player's invulnerability status.
god {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        god=true
        invuln=true
        invulnerability=true
        ngod=true
        ninvuln=true
        ninvulnerability=true
    }
}
# Puts the item in the player's hand on their head as a helmet.
hat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        hat=true
        head=true
        nhat=true
        nhead=true
    }
}
# Fully heal the specified player.
heal {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        heal=true
        nheal=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to all available staff
helpop {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        helpop=true
        nhelpop=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Teleports to home.
home {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        home=true
        nhome=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Deletes a home.
"home.delete" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletehome=true
        delhome=true
        ndeletehome=true
        ndelhome=true
    }
}
# Deletes another player's home.
"home.deleteother" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletehomeother=true
        delhomeother=true
        ndeletehomeother=true
        ndelhomeother=true
    }
}
# Display the number of homes you (or another player) can set.
"home.limit" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists homes.
"home.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homes=true
        listhomes=true
        nhomes=true
        nlisthomes=true
    }
}
# Teleports to another player's home.
"home.other" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homeother=true
        nhomeother=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets a home with the specified name.
"home.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        homeset=true
        nhomeset=true
        nsethome=true
        sethome=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the specified player on fire.
ignite {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        burn=true
        ignite=true
        nburn=true
        nignite=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles ignoring of all chat messages.
ignore {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ignore=true
        nignore=true
    }
}
# Shows the names of players that are currently being ignored by the target player
ignorelist {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ignored=true
        ignorelist=true
        listignore=true
        nignored=true
        nignorelist=true
        nlistignore=true
    }
}
# Get server information.
info {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        einfo=true
        info=true
        neinfo=true
        ninfo=true
    }
}
# Allows the user to inspect a target's inventory.
invsee {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        invsee=true
        ninvsee=true
    }
}
# Get information about the item you are currently holding.
iteminfo {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        itemdb=true
        iteminfo=true
        nitemdb=true
        niteminfo=true
    }
}
# Base command for Item Name related actions.
itemname {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        itemname=true
        nitemname=true
    }
}
# Clears the name assigned to the item currently in the player's hand.
"itemname.clear" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        clearitemname=true
        nclearitemname=true
        nresetitemname=true
        resetitemname=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the user facing name for the item currently in the player's hand.
"itemname.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrenameitem=true
        nsetitemname=true
        renameitem=true
        setitemname=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Jails a player.
jail {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        jail=true
        njail=true
    }
}
# Lists all jails.
jails {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        jails=true
        njails=true
    }
}
# Deletes a jail.
"jails.delete" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletejail=true
        deljail=true
        ndeletejail=true
        ndeljail=true
        nrmjail=true
        rmjail=true
    }
}
# Creates a jail.
"jails.set" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        createjail=true
        ncreatejail=true
        nsetjail=true
        setjail=true
    }
}
# Warp to a jail.
"jails.tp" {
    # Sets whether a command is enabled.
    enabled=true
}
# Perform a short range "jump" to the block they are looking at.
jump {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        j=true
        jmp=true
        jump=true
        nj=true
        njmp=true
        njump=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Kicks a player
kick {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kick=true
        nkick=true
    }
}
# Kicks all players, optionally turning the whitelist on.
kickall {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kickall=true
        nkickall=true
    }
}
# Kill the specified player(s) and/or entities.
kill {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kill=true
        nkill=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Kills the specified entities.
killentity {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        killentity=true
        nkillentity=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Redeems a kit.
kit {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kit=true
        nkit=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets or unsets a kit to auto redeem on login.
"kit.autoredeem" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists the commands associated with a kit.
"kit.command" {
    # Sets whether a command is enabled.
    enabled=true
}
# Adds a command to the specified kit.
"kit.command.add" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes all commands from the specified kit.
"kit.command.clear" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes a command from the specified kit.
"kit.command.remove" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the cooldown on a kit.
"kit.cooldown" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the cost for a kit.
"kit.cost" {
    # Sets whether a command is enabled.
    enabled=true
}
# Opens a chest window and lets you create a kit through the Minecraft inventory interface.
"kit.create" {
    # Sets whether a command is enabled.
    enabled=true
}
# Opens a GUI for editing kit contents.
"kit.edit" {
    # Sets whether a command is enabled.
    enabled=true
}
# Redeems a kit on the specified player.
"kit.give" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a kit is displayed in the kit list.
"kit.hidden" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists information about the kit.
"kit.info" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists the kits that are available.
"kit.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kits=true
        nkits=true
    }
}
# Sets or unsets a kit as a one time use kit.
"kit.onetime" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a separate permission is required to redeem a kit, if separate permissions is enabled in the config.
"kit.permissionbypass" {
    # Sets whether a command is enabled.
    enabled=true
}
# Discards cached kit information and reloads data from persistence.
"kit.reload" {
    # Sets whether a command is enabled.
    enabled=true
}
# Deletes a kit.
"kit.remove" {
    # Sets whether a command is enabled.
    enabled=true
}
# Renames a kit
"kit.rename" {
    # Sets whether a command is enabled.
    enabled=true
}
# Resets a player's usage of a kit, allowing them to redeem the kit again immediately.
"kit.resetusage" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the items in a kit to your current inventory.
"kit.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets up a kit so it gets redeemed for every new player that joins the server.
"kit.setfirstjoin" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets or unsets whether redeeming a kit will notify the target user.
"kit.toggleredeemmessage" {
    # Sets whether a command is enabled.
    enabled=true
}
# View the contents of a kit.
"kit.view" {
    # Sets whether a command is enabled.
    enabled=true
}
# Fire exploding cats from your person.
kittycannon {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        kc=true
        kittycannon=true
        nkc=true
        nkittycannon=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Strikes a position or player with a lightning bolt.
lightning {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lightning=true
        nlightning=true
        nshock=true
        nsmite=true
        nstrike=true
        nthor=true
        shock=true
        smite=true
        strike=true
        thor=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Lists the players on the server.
list {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        list=true
        listplayers=true
        ls=true
        nlist=true
        nlistplayers=true
        nls=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Locks the weather on the specified world.
lockweather {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        killweather=true
        lockweather=true
        nkillweather=true
        nlockweather=true
    }
}
# Base command for Lore related actions.
lore {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lore=true
        nlore=true
    }
}
# Adds a new line to the lore on the current item in the hand.
"lore.add" {
    # Sets whether a command is enabled.
    enabled=true
}
# Clears the lore on the current item in the hand.
"lore.clear" {
    # Sets whether a command is enabled.
    enabled=true
}
# Deletes a line of the lore on the current item in the hand at a specific line.
"lore.delete" {
    # Sets whether a command is enabled.
    enabled=true
}
# Edits the lore on the current item in the hand at a specific line.
"lore.edit" {
    # Sets whether a command is enabled.
    enabled=true
}
# Inserts a new line to the lore on the current item in the hand at a specific line.
"lore.insert" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the lore on the current item in the hand. The current lore is replaced.
"lore.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Retrieves mail that has been sent to you.
mail {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        email=true
        mail=true
        nemail=true
        nmail=true
    }
}
# Clears all mail in your inbox.
"mail.clear" {
    # Sets whether a command is enabled.
    enabled=true
}
# Read others' mail.
"mail.other" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sends a mail to the specified player.
"mail.send" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsendmail=true
        sendmail=true
    }
}
# Formats the next chat message as an action, using the format set by the server.
me {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        action=true
        me=true
        naction=true
        nme=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to a player, or the console with "-".
message {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        m=true
        message=true
        msg=true
        nm=true
        nmessage=true
        nmsg=true
        nt=true
        nw=true
        nwhisper=true
        t=true
        w=true
        whisper=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets item in hand to a full stack.
more {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        more=true
        nmore=true
        nstack=true
        stack=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to view the server MOTD, as defined in the "motd.txt" file.
motd {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        motd=true
        nmotd=true
    }
}
# Prevent players from private messaging you.
msgtoggle {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        messagetoggle=true
        msgtoggle=true
        mtoggle=true
        nmessagetoggle=true
        nmsgtoggle=true
        nmtoggle=true
    }
}
# Mutes the specified player.
mute {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        mute=true
        nmute=true
    }
}
# Bans a specific IGN (rather than specific player) from joining the server.
nameban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nameban=true
        nnameban=true
    }
}
# Allows a specific IGN (rather than specific player) to join the server again.
nameunban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        namepardon=true
        nameunban=true
        nnamepardon=true
        nnameunban=true
    }
}
# List players nearby
near {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        near=true
        nnear=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets your nickname/display name
nick {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nick=true
        nickname=true
        nnick=true
        nnickname=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to add a note to a player.
note {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        addnote=true
        naddnote=true
        nnote=true
        note=true
    }
}
# Displays Nucleus version and module information.
nucleus {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nucleus=true
    }
}
# Lists any compatibility issues that have been detected.
"nucleus.compatibility" {
    # Sets whether a command is enabled.
    enabled=true
}
# Utilities to support debugging server issues.
"nucleus.debug" {
    # Sets whether a command is enabled.
    enabled=true
}
# Gets all UUIDs that appear to be registered to a username.
"nucleus.debug.getuuids" {
    # Sets whether a command is enabled.
    enabled=true
}
# Refreshes the {{uniquecount}} token, in case it's out of sync.
"nucleus.debug.refreshuniquevisitors" {
    # Sets whether a command is enabled.
    enabled=true
}
# Verifies that all command keys are set correctly
"nucleus.debug.verifycmds" {
    # Sets whether a command is enabled.
    enabled=true
}
# Generates Nucleus documentation data files
"nucleus.docgen" {
    # Sets whether a command is enabled.
    enabled=true
}
# Gets or refreshes a user's entry in the username cache.
"nucleus.getuser" {
    # Sets whether a command is enabled.
    enabled=true
}
# Creates a file in the server root directory containing information about the server and Nucleus environment.
"nucleus.info" {
    # Sets whether a command is enabled.
    enabled=true
}
# Clears the in-memory cache of users who have logged on in the past session, forcing Nucleus to read the data files on their next login.
"nucleus.nucleus" {
    # Sets whether a command is enabled.
    enabled=true
}
# Prints all permissions registered in Nucleus.
"nucleus.printperms" {
    # Sets whether a command is enabled.
    enabled=true
}
# Rebuild the Nucleus user cache.
"nucleus.rebuildusercache" {
    # Sets whether a command is enabled.
    enabled=true
}
# Reloads Nucleus' configuration files.
"nucleus.reload" {
    # Sets whether a command is enabled.
    enabled=true
}
# Deletes all data in Nucleus, and optionally, Minecraft, for a player.
"nucleus.resetuser" {
    # Sets whether a command is enabled.
    enabled=true
}
# Saves all files.
"nucleus.save" {
    # Sets whether a command is enabled.
    enabled=true
}
# Allows the user to add the recommended permissions for either USER, MOD or ADMIN roles to a specified group.
"nucleus.setupperms" {
    # Sets whether a command is enabled.
    enabled=true
}
# Gets and sets Nucleus user preferences.
nuserprefs {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nuserprefs=true
        userprefs=true
    }
}
# Displays the current latency for the target player.
ping {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nping=true
        ping=true
    }
}
# Allows the user to send a broadcast without prefixes or suffixes.
plainbroadcast {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npbc=true
        npbcast=true
        nplainbroadcast=true
        pbc=true
        pbcast=true
        plainbroadcast=true
    }
}
# Binds the item in hand to the specified command.
powertool {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npowertool=true
        npt=true
        powertool=true
        pt=true
    }
}
# Removes any powertool bindings to the item in hand.
"powertool.delete" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all current powertools that the user has.
"powertool.list" {
    # Sets whether a command is enabled.
    enabled=true
}
# Gets the player's realname from the provided nickname.
realname {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrealname=true
        realname=true
    }
}
# Allows the user to delete a specific note attached to a player.
removenote {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        deletenote=true
        delnote=true
        ndeletenote=true
        ndelnote=true
        nremovenote=true
        removenote=true
    }
}
# Repairs item in hand.
repair {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        fix=true
        mend=true
        nfix=true
        nmend=true
        nrepair=true
        repair=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a message to the last player that sent you a message.
reply {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nr=true
        nreply=true
        r=true
        reply=true
    }
}
# Fires a player upwards like a rocket.
rocket {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrocket=true
        rocket=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to teleport to a random destination within the world border.
rtp {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrandomteleport=true
        nrteleport=true
        nrtp=true
        randomteleport=true
        rteleport=true
        rtp=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Read the server rules.
rules {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrules=true
        rules=true
    }
}
# Gets information about the specified player.
seen {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        lookup=true
        nlookup=true
        nseen=true
        nseenplayer=true
        seen=true
        seenplayer=true
    }
}
# Provides functions for modifying the server list.
serverlist {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nserverlist=true
        nsl=true
        serverlist=true
        sl=true
    }
}
# Allows for temporary modification of the server list MOTD, on a timed basis.
"serverlist.message" {
    # Sets whether a command is enabled.
    enabled=true
}
# Displays server runtime statistics.
serverstat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nserverstat=true
        nuptime=true
        serverstat=true
        uptime=true
    }
}
# Displays the current server time.
servertime {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nrealtime=true
        nservertime=true
        realtime=true
        servertime=true
    }
}
# Sets the new player spawn point.
setfirstspawn {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetfirstspawn=true
        setfirstspawn=true
    }
}
# Removes the new player spawn point.
"setfirstspawn.del" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the Nucleus language for self or a given player.
setnucleuslanguage {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetnuclang=true
        nsetnucleuslanguage=true
        setnuclang=true
        setnucleuslanguage=true
    }
}
# Sets the current world spawn point.
setspawn {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetspawn=true
        setspawn=true
    }
}
# Shows or hides item attributes on item hover.
showitemattributes {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nshowattributes=true
        nshowitemattributes=true
        showattributes=true
        showitemattributes=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Spawns in copies of the specified player's skull (or your own, if no player is specified) into your inventory.
skull {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nskull=true
        skull=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# See all private messages sent to other players.
socialspy {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsocialspy=true
        socialspy=true
    }
}
# Warp to a world spawn point.
spawn {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nspawn=true
        spawn=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Warp another player to a world spawn point.
"spawn.other" {
    # Sets whether a command is enabled.
    enabled=true
}
# Spawns in mobs at the specified player's location.
spawnmob {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        mobspawn=true
        nmobspawn=true
        nspawnentity=true
        nspawnmob=true
        spawnentity=true
        spawnmob=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets or gets the specified player's walking or flying speed.
speed {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nspeed=true
        speed=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to chat in the staff chat channel.
staffchat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        a=true
        na=true
        nsc=true
        nstaffchat=true
        sc=true
        staffchat=true
    }
}
# Stops the server.
stop {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nstop=true
        stop=true
    }
}
# Forces a player to run a command.
sudo {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsudo=true
        sudo=true
    }
}
# Kill your player, displaying the Game Over screen.
suicide {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsuicide=true
        suicide=true
    }
}
# Teleports one player to another's location.
teleport {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntele=true
        nteleport=true
        ntp=true
        tele=true
        teleport=true
        tp=false
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Allows the user to send a message to a player without prefixes or suffixes.
tellplain {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nplaintell=true
        nptell=true
        ntellplain=true
        plaintell=true
        ptell=true
        tellplain=true
    }
}
# Temporarily bans a player.
tempban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntempban=true
        tempban=true
    }
}
# Teleport to the other side of a wall.
thru {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nthrough=true
        nthru=true
        through=true
        thru=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Gets the time for the specified world.
time {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntime=true
        time=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the time for the specified world.
"time.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsettime=true
        ntimeset=true
        settime=true
        timeset=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Toggles whether powertools activate.
toggle {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntoggle=true
        toggle=true
    }
}
# Toggles whether the user is receiving staff chat messages.
toggleviewstaffchat {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntoggleviewstaffchat=true
        ntogglevsc=true
        nvsc=true
        toggleviewstaffchat=true
        togglevsc=true
        vsc=true
    }
}
# Teleports the user (or target player) to the surface.
top {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntop=true
        ntosurface=true
        ntotop=true
        top=true
        tosurface=true
        totop=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Send a request to a player to ask for you to teleport to them.
tpa {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        call=true
        ncall=true
        nteleportask=true
        ntpa=true
        ntpask=true
        teleportask=true
        tpa=true
        tpask=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Request all players on the server to teleport to your location.
tpaall {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntpaall=true
        ntpaskall=true
        tpaall=true
        tpaskall=true
    }
}
# Accept a pending teleport request.
tpaccept {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportaccept=true
        ntpaccept=true
        ntpyes=true
        teleportaccept=true
        tpaccept=true
        tpyes=true
    }
}
# Send a request to a player to ask them to teleport to you.
tpahere {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportaskhere=true
        ntpahere=true
        ntpaskhere=true
        teleportaskhere=true
        tpahere=true
        tpaskhere=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Forcefully teleport all players on the server to your location.
tpall {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntpall=true
        ntpallhere=true
        tpall=true
        tpallhere=true
    }
}
# Deny a pending teleport request.
tpdeny {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nteleportdeny=true
        ntpdeny=true
        ntpno=true
        teleportdeny=true
        tpdeny=true
        tpno=true
    }
}
# Teleports a player to your location.
tphere {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntph=true
        ntphere=true
        tph=true
        tphere=true
    }
}
tpn {
    # Sets whether a command is enabled.
    enabled=true
}
# Teleport to the specified location.
tppos {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntppos=true
        tppos=true
    }
}
# Toggle whether teleport requests are received.
tptoggle {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntptoggle=true
        tptoggle=true
    }
}
# Opens an inventory window which acts as a disposal unit, deleting items placed into it.
trash {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        ntrash=true
        trash=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Unbans a player.
unban {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        npardon=true
        nunban=true
        pardon=true
        unban=true
    }
}
# Unjails a player.
unjail {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunjail=true
        unjail=true
    }
}
# Makes the book in the target player's hand writable again.
unsignbook {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunsign=true
        nunsignbook=true
        unsign=true
        unsignbook=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Attempts to nudge players by one block to unstick them, if possible.
unstuck {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nunstuck=true
        unstuck=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Scans the messages file for keys that might not include all the required tokens and replaces them with the standard translation.
update-messages {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nupdate-messages=true
        update-messages=true
    }
}
# Toggles whether you are invisible on the server.
vanish {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nv=true
        nvanish=true
        v=true
        vanish=true
    }
}
# Toggles whether you log in to the server vanished.
vanishonlogin {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nvanishonlogin=true
        nvonlogin=true
        vanishonlogin=true
        vonlogin=true
    }
}
# Allows a user to speak when a global mute is in effect.
voice {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nvoice=true
        voice=true
    }
}
# Teleport to the specified warp.
warp {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nwarp=true
        warp=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Base command for category management.
"warp.category" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all the warp categories in use on the server.
"warp.category.list" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes the description for a category.
"warp.category.removedescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Removes the display name for a category.
"warp.category.removedisplayname" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the description for a category.
"warp.category.setdescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets a display name for a category.
"warp.category.setdisplayname" {
    # Sets whether a command is enabled.
    enabled=true
}
# Set the cost of the specified warp.
"warp.cost" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all warps on the server.
"warp.delete" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        delwarp=true
        ndelwarp=true
        nremwarp=true
        nrmwarp=true
        remwarp=true
        rmwarp=true
    }
}
# Lists all warps on the server.
"warp.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nwarps=true
        warps=true
    }
}
# Sets a warp.
"warp.set" {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nsetwarp=true
        nwarpset=true
        setwarp=true
        warpset=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Sets the category of a warp for display in /warp list.
"warp.setcategory" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets or removes (with -r) the description for the warp.
"warp.setdescription" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the weather on the specified world.
weather {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nweather=true
        weather=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Opens a crafting table window so users can craft.
workbench {
    # Time, in seconds, that a player has to wait between uses of this command. Set to 0 to disable.
    cooldown=0
    # Cost of a command that a player has to pay to use the command. The cost will only be deducted if successful. Set to 0 to disable.
    cost=0
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        craft=true
        ncraft=true
        nwb=true
        nworkbench=true
        wb=true
        workbench=true
    }
    # Time, in seconds, that a player has to wait without moving or using other commands before their command will execute. Set to 0 to disable.
    warmup=0
}
# Parent command for all other world commands.
world {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nucleusworld=true
        nworld=true
        world=true
    }
}
# Parent command for world border commands.
"world.border" {
    # Sets whether a command is enabled.
    enabled=true
}
# Cancels any current world border generation.
"world.border.cancelgen" {
    # Sets whether a command is enabled.
    enabled=true
}
# Generates chunks up to the world border.
"world.border.gen" {
    # Sets whether a command is enabled.
    enabled=true
}
# Resets the world border to the default width.
"world.border.reset" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the world border.
"world.border.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Clones an existing world and registers it
"world.clone" {
    # Sets whether a command is enabled.
    enabled=true
}
# Creates a world with the specified name and options.
"world.create" {
    # Sets whether a command is enabled.
    enabled=true
}
# Deletes a world from the disc.
"world.delete" {
    # Sets whether a command is enabled.
    enabled=true
}
# Disables a world that is unloaded, preventing it from being loaded in future.
"world.disable" {
    # Sets whether a command is enabled.
    enabled=true
}
# Enables a world, allowing it to be loaded on demand.
"world.enable" {
    # Sets whether a command is enabled.
    enabled=true
}
# Displays a world's game rules.
"world.gamerule" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the specified world's game rule.
"world.gamerule.set" {
    # Sets whether a command is enabled.
    enabled=true
}
# Shows available generators for use when creating a world.
"world.generators" {
    # Sets whether a command is enabled.
    enabled=true
}
# Displays information about one world.
"world.info" {
    # Sets whether a command is enabled.
    enabled=true
}
# Lists all worlds.
"world.list" {
    # Sets whether a command is enabled.
    enabled=true
    # The commands below are root command aliases. Set to false to disable them. User added entries here will be honoured at startup.
    "root level aliases" {
        nworlds=true
        worlds=true
    }
}
# Loads a world that is currently unloaded.
"world.load" {
    # Sets whether a command is enabled.
    enabled=true
}
# Shows available modifiers for use when creating a world.
"world.modifiers" {
    # Sets whether a command is enabled.
    enabled=true
}
# Shows available presets for use when creating a world.
"world.presets" {
    # Sets whether a command is enabled.
    enabled=true
}
# Allows you to rename and unloaded world.
"world.rename" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the difficulty of a world.
"world.setdifficulty" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the gamemode of a world.
"world.setgamemode" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world has hardcore mode enabled.
"world.sethardcore" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world will keep the chunks around it's spawn point loaded.
"world.setkeepspawnloaded" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world will load on startup.
"world.setloadonstartup" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets whether a world has PVP enabled.
"world.setpvpenabled" {
    # Sets whether a command is enabled.
    enabled=true
}
# Sets the spawn point of a world.
"world.setspawn" {
    # Sets whether a command is enabled.
    enabled=true
}
# Teleports to world spawn.
"world.spawn" {
    # Sets whether a command is enabled.
    enabled=true
}
# Teleports you, or another player, to the specified world.
"world.teleport" {
    # Sets whether a command is enabled.
    enabled=true
}
# Unloads a world that is currently loaded.
"world.unload" {
    # Sets whether a command is enabled.
    enabled=true
}
